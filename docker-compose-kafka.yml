version: "3.6"

services:
  # zookeeper:
  #   image: bitnami/zookeeper:latest
  #   restart: unless-stopped
  #   hostname: zookeeper
  #   networks:
  #     - flowing
  #   ports:
  #     - 2181:2181
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ALLOW_ANONYMOUS_LOGIN: "yes"

  # kafka:
  #   image: bitnami/kafka:latest
  #   restart: unless-stopped
  #   hostname: kafka
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - flowing
  #   ports:
  #     - 9092:9092
  #     - 29092:29092
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_ADVERTISED_HOST_NAME: localhost
  #     KAFKA_ADVERTISED_PORT: 9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     ALLOW_PLAINTEXT_LISTENER: "yes"
  #   working_dir: /data
  #   volumes:
  #     - ./data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, PLAINTEXT_HOST://localhost:29092
      # KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      # ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    working_dir: /data
    volumes:
      - ./data:/data

  kafka-create-topics:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    depends_on:
      - kafka
    hostname: kafka-create-topics
    command: ["bash", "./create-topics.sh"]
    working_dir: /scripts
    volumes:
      - ./scripts:/scripts
# networks:
#   flowing:
#     driver: bridge
